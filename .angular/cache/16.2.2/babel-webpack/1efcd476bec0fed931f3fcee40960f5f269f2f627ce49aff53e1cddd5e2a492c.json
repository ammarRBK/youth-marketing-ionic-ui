{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/UNICEF/Desktop/youth-marketing-projrct/youth-marketing-ionic-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./addproduct.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./addproduct.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Camera } from '@awesome-cordova-plugins/camera/ngx';\nimport { File } from \"@awesome-cordova-plugins/file/ngx\";\nimport { Router } from '@angular/router';\nimport { ActionSheetController, LoadingController, Platform } from '@ionic/angular';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { ProfilePage } from '../profile.page';\nlet AddproductPage = (_class = class AddproductPage {\n  constructor(productsServ, addformbuilder, router, camera, actionSheetController, platform, file, loadingController) {\n    this.productsServ = productsServ;\n    this.addformbuilder = addformbuilder;\n    this.router = router;\n    this.camera = camera;\n    this.actionSheetController = actionSheetController;\n    this.platform = platform;\n    this.file = file;\n    this.loadingController = loadingController;\n    this.errormessage = \"\";\n    this.addedmessage = \"\";\n    this.currency = \"\";\n    this.fileName = \"\";\n    this.defultDateValue = null;\n    this.defultExpireValue = null;\n    this.productCategories = this.productsServ.productCategories;\n    this.platform.backButton.subscribe(() => {\n      this.router.navigateByUrl('home/login/profile');\n    });\n  }\n  ngOnInit() {\n    this.addinterfaceform = this.addformbuilder.group({\n      productTitle: ['', [Validators.required, Validators.minLength(3)]],\n      productDescription: ['', [Validators.required, Validators.minLength(3)]],\n      availableUnits: ['', [Validators.required]],\n      productQuantity: ['', [Validators.required]],\n      expirationDate: ['', []],\n      productDate: ['', []],\n      productPrice: ['', [Validators.required]],\n      productImage: ['', []],\n      productCategory: ['', [Validators.required]]\n    });\n  }\n  pickImage(sourceType) {\n    const options = {\n      quality: 100,\n      sourceType: sourceType,\n      destinationType: this.camera.DestinationType.FILE_URI,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE,\n      correctOrientation: true\n    };\n    this.camera.getPicture(options).then(imageData => {\n      // this.picData= \"this is the blobl ):\" + imageData;\n      // let imageName= \"\";\n      //new Date().toDateString() + Math.random().toString() + '.jpeg';\n      // const imageBlob = this.dataURItoBlob(imageData);\n      // const imageFile = new File([imageBlob], imageName, { type: 'image/jpeg' });\n      // this.file.resolveLocalFilesystemUrl(imageData).then(fileEntry=>{\n      //   let { name, nativeURL } = fileEntry;\n      //     // get the path..\n      //   let path = nativeURL.substring(0, nativeURL.lastIndexOf(\"/\"));\n      //   imageName= name;\n      //   this.file.readAsArrayBuffer(path,name).then(buffered=>{\n      //   let imageBlob= new Blob([buffered],{type: 'image/jpeg'});\n      //     setTimeout(()=>{\n      //       this.picData= imageBlob.size;\n      //     },2000)\n      //   })\n      // })\n      // this.makeFileIntoBlob(imageData).then(data=>{\n      //   this.picData=\"this is the file blob \\n\" + JSON.stringify(data);\n      // })\n      // this.addinterfaceform.patchValue({\n      //   productImage: null\n      // },{\n      //   onlySelf:true\n      // });\n      this.imageUri = imageData;\n      this.fileName = imageData.substr(imageData.lastIndexOf('/') + 1).split(\"?\")[0];\n    }, err => {\n      // Handle error\n      this.errormessage = err === \"cordova_not_available\" ? \"الرجاء استخدام هاتف جوال لالتقاط او اختيار صورة للمنتج*\" : err;\n      // \"حدث خطأ أثناء اختيار ملف الصورة (الرجاء التأكد من الخطأ واعادة المحاولة)*\"\n      setTimeout(() => {\n        this.errormessage = \"\";\n      }, 3000);\n    });\n  }\n  selectImage() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const actionSheet = yield _this.actionSheetController.create({\n        header: \"اختر مصدر صورة المنتج\",\n        mode: \"ios\",\n        buttons: [{\n          text: 'اختيار من المعرض',\n          handler: () => {\n            _this.pickImage(_this.camera.PictureSourceType.PHOTOLIBRARY);\n          }\n        }, {\n          text: 'التقط صورة باستخدام الكاميرا',\n          handler: () => {\n            _this.pickImage(_this.camera.PictureSourceType.CAMERA);\n          }\n        }, {\n          text: 'إلغاء',\n          role: 'cancel'\n        }]\n      });\n      yield actionSheet.present();\n    })();\n  }\n  // product requirements= ['productTitle','productDescription','productQuantity','availableUnits','productDate','expirationDate','productImage','productPrice']\n  submitAddProduct() {\n    this.productsServ.loadingProcess('!!...جارٍ إضافة المنتج');\n    let productdata = {\n      productTitle: this.addinterfaceform.value.productTitle,\n      productDescription: this.addinterfaceform.value.productDescription,\n      productQuantity: this.addinterfaceform.value.productQuantity,\n      availableUnits: this.addinterfaceform.value.availableUnits,\n      productDate: this.addinterfaceform.value.productDate != null ? this.addinterfaceform.value.productDate : null,\n      expirationDate: this.addinterfaceform.value.expirationDate != null ? this.addinterfaceform.value.expirationDate : null,\n      productPrice: this.addinterfaceform.value.productPrice,\n      productCategory: this.addinterfaceform.value.productCategory\n    };\n    // this.productsServ.addProduct(productdata).subscribe(result=>{\n    //   if (result['message']==\"cannot add the product\") {\n    //     this.errormessage= \"حدث خطأ ما أثناء اضافة منتجك* \\n الرجاء التأكد من البيانات (اسم المنتج يجب أن لا يكون مكرراً والبيانات معبأة بشكل كامل وصحيح)\"\n    //     setTimeout(() => {\n    //       this.errormessage= \"\"\n    //     }, 3000);\n    //   }else{\n    //     this.addedmessage= \"تم إضافة المنتج بنجاح\";\n    //     setTimeout(() => {\n    //       this.addinterfaceform.setValue({\n    //         productTitle: null,\n    //         productDescription: null,\n    //         productQuantity: null,\n    //         availableUnits: null,\n    //         productDate: null,\n    //         expirationDate: null,\n    //         productPrice: null\n    //       })\n    //       this.addedmessage= \"\"\n    //     }, 3000);\n    //   }\n    // })\n    let productOptions = {\n      fileKey: \"productImage\",\n      fileName: this.imageUri.substr(this.imageUri.lastIndexOf('/') + 1),\n      mimeType: 'image/jpeg',\n      params: productdata\n    };\n    this.productsServ.addProduct(this.imageUri, productOptions).then(result => {\n      if (result['message'] == \"cannot add the product\") {\n        this.loadingController.dismiss();\n        this.errormessage = \"حدث خطأ ما أثناء اضافة منتجك* \\n الرجاء التأكد من البيانات (اسم المنتج يجب أن لا يكون مكرراً والبيانات معبأة بشكل كامل وصحيح)\";\n        setTimeout(() => {\n          this.errormessage = \"\";\n        }, 3000);\n      } else {\n        this.loadingController.dismiss();\n        this.fileName = \"\";\n        this.addedmessage = \"تم إضافة المنتج بنجاح\";\n        //refresh the Profile page component to call ngOnInit function another time\n        ProfilePage.returned.next(false);\n        setTimeout(() => {\n          this.addinterfaceform.setValue({\n            productTitle: null,\n            productDescription: null,\n            productQuantity: null,\n            availableUnits: null,\n            productDate: null,\n            expirationDate: null,\n            productPrice: null,\n            productImage: null,\n            productCategory: null\n          });\n          this.addedmessage = \"\";\n        }, 2000);\n      }\n    }).catch(error => {\n      this.loadingController.dismiss();\n      this.errormessage = \"حدث خطأ ما أثناء اضافة منتجك* \\n الرجاء التأكد من البيانات (اسم المنتج يجب أن لا يكون مكرراً والبيانات معبأة بشكل كامل وصحيح)\";\n      setTimeout(() => {\n        this.errormessage = \"\";\n      }, 4000);\n    });\n  }\n  formatToCurrency(event) {\n    let uy = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'JOD'\n    }).format(event.target.value);\n    this.currency = uy;\n    // this.addinterfaceform.setValue({\n    //   productPrice: uy\n    // })\n  }\n\n  backToProfile() {\n    this.router.navigateByUrl(\"home/login/profile\");\n  }\n  setRequired(event) {\n    let category = event.target.value;\n    category.startsWith('حلويات') || category.startsWith('مواد غذائية') ? document.getElementById('dates').setAttribute('required', '') : document.getElementById('dates').removeAttribute('required');\n  }\n}, _class.ctorParameters = () => [{\n  type: ProductsService\n}, {\n  type: FormBuilder\n}, {\n  type: Router\n}, {\n  type: Camera\n}, {\n  type: ActionSheetController\n}, {\n  type: Platform\n}, {\n  type: File\n}, {\n  type: LoadingController\n}], _class);\nAddproductPage = __decorate([Component({\n  selector: 'app-addproduct',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AddproductPage);\nexport { AddproductPage };\n// image;\n//  imageData;\n// constructor(private camera: Camera,\n//         private http: HttpClient) { }\n//   ngOnInit() {\n//   }\n//   openCamera(){\n//     const options: CameraOptions = {\n//     quality: 100,\n//     destinationType: this.camera.DestinationType.DATA_URL,\n//     encodingType: this.camera.EncodingType.JPEG,\n//     mediaType: this.camera.MediaType.PICTURE,\n//    }\n//     this.camera.getPicture(options).then((imageData) => {\n//     this.imageData = imageData;\n//     this.image=(<any>window).Ionic.WebView.convertFileSrc(imageData);\n//     }, (err) => {\n//        // Handle error\n//        alert(\"error \"+JSON.stringify(err))\n//   });\n// }\n//   upload(){\n//     let  url = 'your REST API url';\n//     const date = new Date().valueOf();\n//     // Replace extension according to your media type\n//     const imageName = date+ '.jpeg';\n//     // call method that creates a blob from dataUri\n//     const imageBlob = this.dataURItoBlob(this.imageData);\n//     const imageFile = new File([imageBlob], imageName, { type: 'image/jpeg' })\n//     let  postData = new FormData();\n//     postData.append('file', imageFile);\n//     let data:Observable<any> = this.http.post(url,postData);\n//     data.subscribe((result) => {\n//       console.log(result);\n//     });\n//   }","map":{"version":3,"names":["Component","FormBuilder","Validators","Camera","File","Router","ActionSheetController","LoadingController","Platform","ProductsService","ProfilePage","AddproductPage","_class","constructor","productsServ","addformbuilder","router","camera","actionSheetController","platform","file","loadingController","errormessage","addedmessage","currency","fileName","defultDateValue","defultExpireValue","productCategories","backButton","subscribe","navigateByUrl","ngOnInit","addinterfaceform","group","productTitle","required","minLength","productDescription","availableUnits","productQuantity","expirationDate","productDate","productPrice","productImage","productCategory","pickImage","sourceType","options","quality","destinationType","DestinationType","FILE_URI","encodingType","EncodingType","JPEG","mediaType","MediaType","PICTURE","correctOrientation","getPicture","then","imageData","imageUri","substr","lastIndexOf","split","err","setTimeout","selectImage","_this","_asyncToGenerator","actionSheet","create","header","mode","buttons","text","handler","PictureSourceType","PHOTOLIBRARY","CAMERA","role","present","submitAddProduct","loadingProcess","productdata","value","productOptions","fileKey","mimeType","params","addProduct","result","dismiss","returned","next","setValue","catch","error","formatToCurrency","event","uy","Intl","NumberFormat","style","format","target","backToProfile","setRequired","category","startsWith","document","getElementById","setAttribute","removeAttribute","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\UNICEF\\Desktop\\youth-marketing-projrct\\youth-marketing-ionic-ui\\src\\app\\login\\profile\\addproduct\\addproduct.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport {  Camera,CameraOptions } from '@awesome-cordova-plugins/camera/ngx';\r\nimport { File } from \"@awesome-cordova-plugins/file/ngx\";\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@awesome-cordova-plugins/file-transfer/ngx';\r\nimport { Router } from '@angular/router';\r\nimport { ActionSheetController, LoadingController, Platform } from '@ionic/angular';\r\nimport { ProductsService } from 'src/app/services/products.service';\r\nimport { ProfilePage } from '../profile.page';\r\n\r\n@Component({\r\n  selector: 'app-addproduct',\r\n  templateUrl: './addproduct.page.html',\r\n  styleUrls: ['./addproduct.page.scss'],\r\n})\r\n\r\n\r\nexport class AddproductPage implements OnInit {\r\n  \r\n  addinterfaceform: FormGroup;\r\n  errormessage= \"\";\r\n  addedmessage= \"\";\r\n  currency= \"\";\r\n  imageUri;\r\n  fileName= \"\";\r\n  productCategories;\r\n  defultDateValue= null;\r\n  defultExpireValue= null;\r\n\r\n  constructor(private productsServ: ProductsService, private addformbuilder:FormBuilder, private router:Router, private camera:Camera, public actionSheetController:ActionSheetController, private platform: Platform, private file:File, public loadingController: LoadingController) { \r\n    this.productCategories= this.productsServ.productCategories;\r\n    this.platform.backButton.subscribe(()=>{\r\n      \r\n      this.router.navigateByUrl('home/login/profile')\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.addinterfaceform= this.addformbuilder.group({\r\n      productTitle: ['',[Validators.required, Validators.minLength(3)]],\r\n      productDescription:['',[Validators.required,Validators.minLength(3)]],\r\n      availableUnits:['',[Validators.required]],\r\n      productQuantity:['',[Validators.required]],\r\n      expirationDate:['',[]],\r\n      productDate:['',[]],\r\n      productPrice: ['',[Validators.required]],\r\n      productImage:['',[]],\r\n      productCategory: ['',[Validators.required]]\r\n    })\r\n  }\r\n\r\n  pickImage(sourceType) {\r\n    const options: CameraOptions = {\r\n      quality: 100,\r\n      sourceType: sourceType,\r\n      destinationType: this.camera.DestinationType.FILE_URI,\r\n      encodingType: this.camera.EncodingType.JPEG,\r\n      mediaType: this.camera.MediaType.PICTURE,\r\n      correctOrientation: true\r\n    }\r\n    this.camera.getPicture(options).then((imageData) => {\r\n      // this.picData= \"this is the blobl ):\" + imageData;\r\n      // let imageName= \"\";\r\n      //new Date().toDateString() + Math.random().toString() + '.jpeg';\r\n      // const imageBlob = this.dataURItoBlob(imageData);\r\n      // const imageFile = new File([imageBlob], imageName, { type: 'image/jpeg' });\r\n\r\n      // this.file.resolveLocalFilesystemUrl(imageData).then(fileEntry=>{\r\n      //   let { name, nativeURL } = fileEntry;\r\n\r\n      //     // get the path..\r\n      //   let path = nativeURL.substring(0, nativeURL.lastIndexOf(\"/\"));\r\n      //   imageName= name;\r\n      //   this.file.readAsArrayBuffer(path,name).then(buffered=>{\r\n      //   let imageBlob= new Blob([buffered],{type: 'image/jpeg'});\r\n\r\n      //     setTimeout(()=>{\r\n      //       this.picData= imageBlob.size;\r\n      //     },2000)\r\n          \r\n          \r\n      //   })\r\n      // })\r\n      // this.makeFileIntoBlob(imageData).then(data=>{\r\n        \r\n      //   this.picData=\"this is the file blob \\n\" + JSON.stringify(data);\r\n      // })\r\n\r\n      // this.addinterfaceform.patchValue({\r\n      //   productImage: null\r\n      // },{\r\n      //   onlySelf:true\r\n      // });\r\n      this.imageUri= imageData\r\n      this.fileName= imageData.substr(imageData.lastIndexOf('/')+1).split(\"?\")[0];\r\n      \r\n    }, (err) => {\r\n      // Handle error\r\n      this.errormessage= err === \"cordova_not_available\" \r\n      ? \"الرجاء استخدام هاتف جوال لالتقاط او اختيار صورة للمنتج*\" \r\n      : err;\r\n      // \"حدث خطأ أثناء اختيار ملف الصورة (الرجاء التأكد من الخطأ واعادة المحاولة)*\"\r\n      setTimeout(() => {\r\n        this.errormessage= \"\";\r\n      }, 3000);\r\n    });\r\n  }\r\n\r\n  async selectImage() {\r\n    const actionSheet = await this.actionSheetController.create({\r\n      header: \"اختر مصدر صورة المنتج\",\r\n      mode: \"ios\",\r\n      buttons: [{\r\n        text: 'اختيار من المعرض',\r\n        handler: () => {\r\n          this.pickImage(this.camera.PictureSourceType.PHOTOLIBRARY);\r\n        }\r\n      },\r\n      {\r\n        text: 'التقط صورة باستخدام الكاميرا',\r\n        handler: () => {\r\n          this.pickImage(this.camera.PictureSourceType.CAMERA);\r\n        }\r\n      },\r\n      {\r\n        text: 'إلغاء',\r\n        role: 'cancel'\r\n      }\r\n      ]\r\n    });\r\n    await actionSheet.present();\r\n  }\r\n\r\n  // product requirements= ['productTitle','productDescription','productQuantity','availableUnits','productDate','expirationDate','productImage','productPrice']\r\n  submitAddProduct(){\r\n    this.productsServ.loadingProcess('!!...جارٍ إضافة المنتج')\r\n\r\n    let productdata={\r\n      productTitle: this.addinterfaceform.value.productTitle,\r\n      productDescription: this.addinterfaceform.value.productDescription,\r\n      productQuantity: this.addinterfaceform.value.productQuantity,\r\n      availableUnits: this.addinterfaceform.value.availableUnits,\r\n      productDate: this.addinterfaceform.value.productDate != null ? this.addinterfaceform.value.productDate : null,\r\n      expirationDate: this.addinterfaceform.value.expirationDate != null ? this.addinterfaceform.value.expirationDate : null,\r\n      productPrice: this.addinterfaceform.value.productPrice,\r\n      productCategory: this.addinterfaceform.value.productCategory\r\n    }\r\n\r\n    // this.productsServ.addProduct(productdata).subscribe(result=>{\r\n    //   if (result['message']==\"cannot add the product\") {\r\n    //     this.errormessage= \"حدث خطأ ما أثناء اضافة منتجك* \\n الرجاء التأكد من البيانات (اسم المنتج يجب أن لا يكون مكرراً والبيانات معبأة بشكل كامل وصحيح)\"\r\n    //     setTimeout(() => {\r\n    //       this.errormessage= \"\"\r\n    //     }, 3000);\r\n    //   }else{\r\n    //     this.addedmessage= \"تم إضافة المنتج بنجاح\";\r\n    //     setTimeout(() => {\r\n    //       this.addinterfaceform.setValue({\r\n    //         productTitle: null,\r\n    //         productDescription: null,\r\n    //         productQuantity: null,\r\n    //         availableUnits: null,\r\n    //         productDate: null,\r\n    //         expirationDate: null,\r\n    //         productPrice: null\r\n    //       })\r\n\r\n    //       this.addedmessage= \"\"\r\n    //     }, 3000);\r\n    //   }\r\n      \r\n    // })\r\n    let productOptions: FileUploadOptions={\r\n      fileKey: \"productImage\",\r\n      fileName: this.imageUri.substr(this.imageUri.lastIndexOf('/')+1),\r\n      mimeType: 'image/jpeg',\r\n      params: productdata\r\n    }\r\n\r\n    this.productsServ.addProduct(this.imageUri, productOptions).then(result =>{\r\n      if (result['message']==\"cannot add the product\") {\r\n            this.loadingController.dismiss();\r\n            this.errormessage= \"حدث خطأ ما أثناء اضافة منتجك* \\n الرجاء التأكد من البيانات (اسم المنتج يجب أن لا يكون مكرراً والبيانات معبأة بشكل كامل وصحيح)\"\r\n            setTimeout(() => {\r\n              this.errormessage= \"\"\r\n            }, 3000);\r\n          }else{\r\n            this.loadingController.dismiss();\r\n            this.fileName= \"\";\r\n            this.addedmessage= \"تم إضافة المنتج بنجاح\";\r\n//refresh the Profile page component to call ngOnInit function another time\r\n            ProfilePage.returned.next(false);\r\n            setTimeout(() => {\r\n              this.addinterfaceform.setValue({\r\n                productTitle: null,\r\n                productDescription: null,\r\n                productQuantity: null,\r\n                availableUnits: null,\r\n                productDate: null,\r\n                expirationDate: null,\r\n                productPrice: null,\r\n                productImage: null,\r\n                productCategory: null\r\n              })\r\n              \r\n              this.addedmessage= \"\";\r\n            }, 2000);\r\n          }\r\n    }).catch(error=>{\r\n      this.loadingController.dismiss();\r\n        this.errormessage= \"حدث خطأ ما أثناء اضافة منتجك* \\n الرجاء التأكد من البيانات (اسم المنتج يجب أن لا يكون مكرراً والبيانات معبأة بشكل كامل وصحيح)\"\r\n        setTimeout(() => {\r\n          this.errormessage= \"\"\r\n        }, 4000);\r\n    })\r\n  }\r\n\r\n  formatToCurrency(event){\r\n    let uy = new Intl.NumberFormat('en-US',{style: 'currency', currency:'JOD'}).format(event.target.value);\r\n    this.currency= uy;\r\n    // this.addinterfaceform.setValue({\r\n    //   productPrice: uy\r\n    // })\r\n  }\r\n\r\n  backToProfile(){\r\n    this.router.navigateByUrl(\"home/login/profile\")\r\n  }\r\n\r\n  setRequired(event){\r\n    let category= event.target.value;\r\n\r\n    category.startsWith('حلويات') || category.startsWith('مواد غذائية') ? document.getElementById('dates').setAttribute('required','') : document.getElementById('dates').removeAttribute('required');\r\n\r\n  }\r\n\r\n  // makeFileIntoBlob(_imagePath) {\r\n  //   // INSTALL PLUGIN - cordova plugin add cordova-plugin-file\r\n  //   return new Promise((resolve, reject) => {\r\n  //     let fileName = \"\";\r\n  //     this.file\r\n  //       .resolveLocalFilesystemUrl(_imagePath)\r\n  //       .then(fileEntry => {\r\n  //         let { name, nativeURL } = fileEntry;\r\n\r\n  //         // get the path..\r\n  //         let path = nativeURL.substring(0, nativeURL.lastIndexOf(\"/\"));\r\n\r\n  //         fileName = name;\r\n\r\n  //         // we are provided the name, so now read the file into a buffer\r\n  //         return this.file.readAsArrayBuffer(path, name);\r\n  //       })\r\n  //       .then(buffer => {\r\n  //         // get the buffer and make a blob to be saved\r\n  //         let imgBlob = new Blob([buffer], {\r\n  //           type: \"image/jpeg\"\r\n  //         });\r\n          \r\n  //         // pass back blob and the name of the file for saving\r\n  //         // into fire base\r\n  //         resolve({\r\n  //           fileName,\r\n  //           imgBlob\r\n  //         });\r\n  //       })\r\n  //       .catch(e => reject(e));\r\n  //   });\r\n  // }\r\n\r\n  // dataURItoBlob(dataURI) {\r\n  //   // convert base64 to raw binary data held in a string\r\n  //   // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\r\n  //   var byteString = atob(dataURI.split(',')[1]);\r\n  \r\n  //   // separate out the mime component\r\n  //   var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\r\n  \r\n  //   // write the bytes of the string to an ArrayBuffer\r\n  //   var ab = new ArrayBuffer(byteString.length);\r\n  \r\n  //   // create a view into the buffer\r\n  //   var ia = new Uint8Array(ab);\r\n  \r\n  //   // set the bytes of the buffer to the correct values\r\n  //   for (var i = 0; i < byteString.length; i++) {\r\n  //       ia[i] = byteString.charCodeAt(i);\r\n  //   }\r\n  \r\n  //   // write the ArrayBuffer to a blob, and you're done\r\n  //   var blob = new Blob([ab], {type: mimeString});\r\n  //   return blob;\r\n  \r\n  // }\r\n\r\n}\r\n\r\n// image;\r\n//  imageData;\r\n// constructor(private camera: Camera,\r\n//         private http: HttpClient) { }\r\n//   ngOnInit() {\r\n//   }\r\n\r\n//   openCamera(){\r\n//     const options: CameraOptions = {\r\n//     quality: 100,\r\n//     destinationType: this.camera.DestinationType.DATA_URL,\r\n//     encodingType: this.camera.EncodingType.JPEG,\r\n//     mediaType: this.camera.MediaType.PICTURE,\r\n//    }\r\n\r\n//     this.camera.getPicture(options).then((imageData) => {\r\n//     this.imageData = imageData;\r\n//     this.image=(<any>window).Ionic.WebView.convertFileSrc(imageData);\r\n//     }, (err) => {\r\n//        // Handle error\r\n//        alert(\"error \"+JSON.stringify(err))\r\n//   });\r\n// }\r\n//   upload(){\r\n//     let  url = 'your REST API url';\r\n//     const date = new Date().valueOf();\r\n\r\n//     // Replace extension according to your media type\r\n//     const imageName = date+ '.jpeg';\r\n//     // call method that creates a blob from dataUri\r\n//     const imageBlob = this.dataURItoBlob(this.imageData);\r\n//     const imageFile = new File([imageBlob], imageName, { type: 'image/jpeg' })\r\n\r\n//     let  postData = new FormData();\r\n//     postData.append('file', imageFile);\r\n\r\n//     let data:Observable<any> = this.http.post(url,postData);\r\n//     data.subscribe((result) => {\r\n//       console.log(result);\r\n//     });\r\n//   }\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}