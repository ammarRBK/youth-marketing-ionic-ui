{"ast":null,"code":"var _class;\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Device } from '@awesome-cordova-plugins/device/ngx';\nlet AuthService = (_class = class AuthService {\n  constructor(http, device) {\n    this.http = http;\n    this.device = device;\n    this.deviceId = String(this.device.uuid);\n    this.url = 'https://marketing-server.onrender.com/api/';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  set userDataSer(userdata) {\n    this.user = userdata;\n  }\n  get userDataSer() {\n    return this.user;\n  }\n  signup(userData) {\n    return this.http.post(this.url + \"users/signup\", userData, this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  login(userData) {\n    userData['deviceId'] = this.deviceId;\n    return this.http.post(this.url + \"users/signin\", userData, this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  checkLoggedIn() {\n    return this.http.post(this.url + 'users/checkloggedin', {\n      deviceId: this.deviceId\n    }, this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  getUserdata() {\n    return this.http.post(this.url + 'users/getsession', {\n      deviceId: this.deviceId\n    }, this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  editProfile(newProfileData) {\n    newProfileData['deviceId'] = this.deviceId;\n    return this.http.post(this.url + 'users/editprofile', newProfileData, this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  checkOldPassword(oldPassword) {\n    return this.http.post(this.url + 'users/checkoldpassword', {\n      deviceId: this.deviceId,\n      password: oldPassword\n    }, this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  logout() {\n    return this.http.post(this.url + 'users/logout', {\n      deviceId: this.deviceId\n    }, this.httpOptions).pipe(retry(2), catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError('Something bad happened; please try again later.');\n  }\n}, _class.ctorParameters = () => [{\n  type: HttpClient\n}, {\n  type: Device\n}], _class);\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);\nexport { AuthService };","map":{"version":3,"names":["Injectable","HttpClient","HttpHeaders","throwError","retry","catchError","Device","AuthService","_class","constructor","http","device","deviceId","String","uuid","url","httpOptions","headers","userDataSer","userdata","user","signup","userData","post","pipe","handleError","login","checkLoggedIn","getUserdata","editProfile","newProfileData","checkOldPassword","oldPassword","password","logout","error","status","console","__decorate","providedIn"],"sources":["C:\\Users\\UNICEF\\Desktop\\youth-marketing-projrct\\youth-marketing-ionic-ui\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Device } from '@awesome-cordova-plugins/device/ngx';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  \r\n  constructor(private http: HttpClient, private device: Device) { }\r\n\r\n  user: object;\r\n  deviceId= String(this.device.uuid);\r\n  url= 'https://marketing-server.onrender.com/api/';\r\n  httpOptions: object={\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin':'*',\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n  \r\n  set userDataSer(userdata){\r\n    this.user=userdata;\r\n  }\r\n\r\n  get userDataSer(){\r\n    return this.user;\r\n  }\r\n\r\n  signup(userData: object):Observable<{}>{\r\n    return this.http.post(this.url+\"users/signup\",userData,this.httpOptions).pipe(\r\n      retry(2),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  login(userData: object):Observable<{}>{\r\n    userData['deviceId']= this.deviceId\r\n    return this.http.post(this.url+\"users/signin\",userData,this.httpOptions).pipe(\r\n      retry(2),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  checkLoggedIn(){\r\n    return this.http.post(this.url+'users/checkloggedin',{deviceId:this.deviceId},this.httpOptions).pipe(\r\n      retry(2),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  getUserdata(){\r\n    return this.http.post(this.url+'users/getsession', {deviceId:this.deviceId}, this.httpOptions).pipe(\r\n      retry(2),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  editProfile(newProfileData: object): Observable<{}>{\r\n    newProfileData['deviceId']= this.deviceId;\r\n    return this.http.post(this.url+'users/editprofile', newProfileData, this.httpOptions).pipe(\r\n      retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  checkOldPassword(oldPassword){\r\n    return this.http.post(this.url+'users/checkoldpassword', {deviceId:this.deviceId, password: oldPassword}, this.httpOptions).pipe(\r\n      retry(2),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  logout(){\r\n    return this.http.post(this.url+'users/logout',{deviceId:this.deviceId},this.httpOptions).pipe(\r\n      retry(2),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.status === 0) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong.\r\n      console.error(\r\n        `Backend returned code ${error.status}, body was: `, error.error);\r\n    }\r\n    // Return an observable with a user-facing error message.\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}